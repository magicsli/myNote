git   初始化git仓库    git init 
 设置当前用户 git config --global user.name "用户名"
	      git config --global user.email "用户邮箱"

 准备提交  git add ./readme.md 
 提交      git commit -m "提交的简介"  
	提交时要加 -m ,不然会进入一个vim编辑器的模式, 也可以写说明,  按下esc + : + q 退出

	git status 查看这个文件的状态
	
	git log 查看历史记录
	
	git log --oneline 查看版本号和提交信息
	
	暂存目录下的所有修改的文件 git add ./ 

	全部提交 git commit --all -m "git 信息"
	
	忽略文件
		gitignore, 在这个文件中科院设置要被忽略的文件或者目录
		被忽略的文件不会被提交仓库中去
		在.gitignore中可以书写要被忽略的文件的路径, 以 / 开头, 一行写一个路径, 这些路径所对应的文件都会被省略,不会提交到仓储

		写法:
			/.idea 会忽略,idea文件
			/.js   会忽略js目录下的所有文件
			/js/*.js 忽略js目录下的所有js文件
		
	版本回退
		git reset --hard Head~0 回退到上一次代码提交时的状态
		git reset --hard head ~1 回退俩次
		
	回退到指定版本 
		git reset --hard 版本号 
	
	可以看到每一次切换版本的记录; 可以看到所有提交的版本号	
		git reflog 
		

	分支:
		默认是有一个主分支

		创建分支
			git branch dev
			创建了一个dev分支
			在刚创建是dev分支里的东西和master分支里的东西是一样的
	
	
		切换分支
			git  checkout dev
			切换到dev分支

			git branch 查看分支

	合并分支:
		git merge dev 把当前分支和指定的分支(dev)进行合并
	当前分支指的是 git branch 命令输出的前面有 * 号的分支

	合并是如果有冲突,需要手动去处理, 处理后还需要再提交一次

	github 
		- 我的笔记库- 
	 https://github.com/magicsli/myNote.git 

		将项目文件推送到github存储库上
	git push  ** GitHub存储库链时接 ** master
		第一次输入需要账号和密码
	会把当前分支的内容上传到master分支上
	
	提交时需要在本地提交

	从服务器拉取项目
	git pull **  链接 ** master  
	从master分支拿到数据

	从服务器复制整个项目
	git clone ** 地址 **
	会得到远程仓储相同的数据, 如果多次执行会覆盖本地内容

	## ssh 方式上传代码
	   -公钥  私钥, 俩者之间是有关联的.
	   -生成公钥和私钥
		+ `ssh-keygen -t rsa -C "用户名"`
	## 在push和pull操作时
		-先pull,再push	
		-
	## 简写
		- git  remote add  变量名  地址
		-将地址保存在了变量中,针对当前的项目有效
	 +使用
		- git push 变量名 master
	     -git push 变量名 -u master
	  -将master设置为关联,我们再push时就不用再写master了
	- 当我们在push时,加上了-u参数, 那么在下一次push时,我们只需要写上`git push `就能上传我们的代码. (加上-u之后,git会把当前分支与远程分支进行关联. giu push 变量 master    )
	- pull定义关联会错误,建议使用push